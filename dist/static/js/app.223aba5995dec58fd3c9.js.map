{"version":3,"sources":["webpack:///./src/App.vue?662e","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///src/pages/components/inside.vue","webpack:///./src/pages/components/inside.vue?8155","webpack:///./src/pages/components/inside.vue","webpack:///src/pages/components/outside.vue","webpack:///./src/pages/components/outside.vue?0903","webpack:///./src/pages/components/outside.vue","webpack:///src/pages/Home.vue","webpack:///./src/pages/Home.vue?644b","webpack:///./src/pages/Home.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","inside","data","button_click","timer","running","going_up","door","current_floor","max_floor","min_floor","floor_id","outside_up","outside_down","call","props","ele_id","Number","floor_count","call_ele_id","press_floor","up","Boolean","down","methods","handlePhoneClick","alert","handleBellClick","updateFloorInfo","$emit","handleInsideButtonClick","floor","console","log","dial","outsideButtonClick","outside","push","sort","checkStatus","getMinInQueue","arr","length","min","i","getMaxInQueue","max","removeFromQueue","queue","index","indexOf","splice","openDoor","closeDoor","doorAlert","addOutside","run","need_stop","ding","moveUp","moveDown","_this","that","clearInterval","setTimeout","setInterval","created","mounted","destroyed","components_inside","_vm","staticClass","shadow","directives","rawName","value","expression","_v","_s","_l","o","key","class","button-click","type","plain","on","click","$event","staticStyle","display","active-color","inactive-color","active-text","inactive-text","nativeOn","model","callback","$$v","icon","circle","pages_components_inside","inside_normalizeComponent","handleUpClick","handleDownClick","components_outside","size","Home","components","Inside","Outside","outside_normalizeComponent","ele_count","betweenCount","a","b","temp","betweenNum","calculateUpDistance","maxDistance","distance","elevatorToPush","minInQueue","maxInQueue","Math","abs","calculateDownDistance","callFloorUp","floor_num","$refs","insidechild","callFloorDown","getChildStatus","child_current","child_running","child_queue","child_up","pages_Home","ref","refInFor","childStatus","childCallFloorUp","childCallFloorDown","src_pages_Home","Home_normalizeComponent","Vue","use","Router","router","routes","path","component","ElementUI","config","productionTip","el","App","template"],"mappings":"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","file":"static/js/app.223aba5995dec58fd3c9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-35ee2004\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-35ee2004\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-35ee2004\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n    <div id=\"app\">\n        <router-view />\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"App\"\n}\n</script>\n\n<style></style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\n    <div class=\"box\">\n        <el-card class=\"box-card\">\n            <el-card class=\"floor-num\" shadow=\"always\">\n                <div>\n                    <i class=\"el-icon-caret-top\" v-show=\"this.going_up\"></i>\n                    <i\n                        class=\"el-icon-caret-top disabled\"\n                        v-show=\"!this.going_up\"\n                    ></i>\n                    {{ this.current_floor }}\n                    <i class=\"el-icon-caret-bottom\" v-show=\"!this.going_up\"></i>\n                    <i\n                        class=\"el-icon-caret-bottom disabled\"\n                        v-show=\"this.going_up\"\n                    ></i>\n                </div>\n            </el-card>\n            <div class=\"button-group\">\n                <div\n                    v-for=\"o in this.floor_count\"\n                    :key=\"o\"\n                    class=\"button-place\"\n                >\n                    <el-button\n                        type=\"primary\"\n                        plain\n                        class=\"button\"\n                        @click=\"handleInsideButtonClick(o)\"\n                        :class=\"{ 'button-click': button_click[o] }\"\n                    >\n                        {{ o }}\n                    </el-button>\n                </div>\n            </div>\n            <div class=\"control\">\n                <el-switch\n                    class=\"switch\"\n                    style=\"display: block\"\n                    v-model=\"door\"\n                    active-color=\"#13ce66\"\n                    inactive-color=\"#ff4949\"\n                    active-text=\"开门\"\n                    inactive-text=\"关门\"\n                    @click.native=\"doorAlert()\"\n                >\n                </el-switch>\n                <el-button\n                    @click=\"handlePhoneClick()\"\n                    type=\"warning\"\n                    icon=\"el-icon-phone\"\n                    circle\n                ></el-button>\n                <el-button\n                    @click=\"handleBellClick()\"\n                    type=\"danger\"\n                    icon=\"el-icon-message-solid\"\n                    circle\n                ></el-button>\n            </div>\n        </el-card>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"Inside\",\n    data() {\n        return {\n            button_click: [],\n            timer: null,\n            running: false, //是否在运行\n            going_up: true, //true向上 false向下\n            door: false, //门的开关状态\n            current_floor: 1, //当前楼层\n            max_floor: 20,\n            min_floor: 1,\n            floor_id: [],\n            outside_up: [], //外部电梯向上请求队列\n            outside_down: [], //外部电梯向下请求队列\n            inside: [], //内部呼梯信号\n            call: [] //存放内外所有呼梯层\n        }\n    },\n    props: {\n        ele_id: Number, //电梯编号\n        floor_count: Number, //总楼层数\n        call_ele_id: Number,\n        press_floor: Number, //父组件的按下楼层\n        up: Boolean, //是向上\n        down: Boolean\n    },\n    methods: {\n        handlePhoneClick() {\n            alert(\"☎️请求通话！☎️\")\n        },\n        handleBellClick() {\n            alert(\"🆘请求支援!🆘\")\n        },\n        //更新上下楼的时候的内部指示灯\n        updateFloorInfo() {\n            //每秒向父组件传递该电梯当前的id和楼层\n            //接受父组件传值回来\n            this.$emit(\n                \"childStatus\",\n                this.ele_id,\n                this.current_floor,\n                this.running,\n                this.call,\n                this.going_up\n            )\n        },\n        //内部按钮呼梯\n        handleInsideButtonClick(floor) {\n            this.button_click[floor] = true\n            //floor是呼梯楼层,把内部呼梯信号改成1，加入呼梯队列\n            this.inside[floor] = 1\n            console.log(\"内部按键对列我康康\", this.inside)\n            this.dial(floor)\n        },\n        //外部button click\n        outsideButtonClick(floor) {\n            this.outside[floor] = 1\n            this.dial(floor)\n        },\n        //blog里面说，用一个按钮函数就可以\n        dial(floor) {\n            // if (this.call.indexOf(floor) < 0) {\n            console.log(\"现在按下第几层？\", floor)\n            this.call.push(floor)\n            this.call.sort()\n            console.log(\"现在的队列是：\", this.call)\n            if (!this.running) {\n                this.checkStatus()\n            }\n            // }\n        },\n        //找最小最大值\n        getMinInQueue(arr) {\n            if (arr.length <= 0) {\n                console.log(\"找不到最小值\")\n                return false\n            }\n            if (arr.length == 1) {\n                return arr[0]\n            } else {\n                var min = arr[0]\n                for (var i in arr) {\n                    if (arr[i] < min) {\n                        min = arr[i]\n                    }\n                }\n                return min\n            }\n        },\n        getMaxInQueue(arr) {\n            if (arr.length <= 0) {\n                console.log(\"找不到最大值\")\n                return false\n            }\n            if (arr.length == 1) {\n                return arr[0]\n            } else {\n                var max = arr[0]\n                for (var i in arr) {\n                    if (arr[i] > max) {\n                        max = arr[i]\n                    }\n                }\n                return max\n            }\n        },\n        //在队列中删除指定楼层\n        removeFromQueue(queue, floor) {\n            console.log(\"要删除的数字是：\" + floor)\n            var index = queue.indexOf(floor)\n            if (index > -1) {\n                queue.splice(index, 1)\n            }\n        },\n        //开关门\n        openDoor() {\n            this.door = true\n        },\n        closeDoor() {\n            this.door = false\n            console.log(\"door closed\")\n        },\n        //开门警告\n        doorAlert() {\n            if (this.running && this.door == false) {\n                alert(\"运行期间禁止开门！\")\n                this.door = false\n            }\n        },\n        //判断状态，每隔一段时间执行\n        checkStatus() {\n            //判断呼叫队列是否还有东西，修改运行状态\n            this.running = this.call.length > 0 ? true : false\n            //是否在底层\n            if (this.current_floor == this.min_floor) {\n                this.going_up = true\n                //是否在顶层\n            } else if (this.current_floor == this.max_floor) {\n                this.going_up = false\n            } else {\n                //在中间层的状态判断\n                this.going_up &&\n                (!this.running ||\n                    this.current_floor <= this.getMaxInQueue(this.call))\n                    ? (this.going_up = true)\n                    : (this.going_up = false)\n                !this.going_up &&\n                (!this.running ||\n                    this.current_floor >= this.getMinInQueue(this.call))\n                    ? (this.going_up = false)\n                    : (this.going_up = true)\n                console.log(this.getMaxInQueue(this.call), this.going_up)\n            }\n        },\n        //把外面的加进来\n        addOutside(up, down, press_floor) {\n            console.log(\"父组件触发我了,我是电梯\", this.ele_id)\n            console.log(\"现在按下第几层？\", press_floor)\n            if (up == true) {\n                console.log(\"按下了向上按键\")\n                this.outside_up[press_floor] = 1\n            } else if (down == true) {\n                console.log(\"按下了向下按键\")\n                this.outside_down[press_floor] = 1\n            }\n            this.dial(press_floor)\n        },\n        run() {\n            var need_stop = false\n            if (this.running) {\n                if (this.call.indexOf(this.current_floor) > -1) {\n                    //到达内部呼叫楼层\n                    if (this.inside[this.current_floor] == 1) {\n                        this.removeFromQueue(this.call, this.current_floor)\n                        this.inside[this.current_floor] = 0\n                        this.button_click[this.current_floor] = 0\n                        need_stop = true\n                    }\n                    if (this.going_up) {\n                        if (this.outside_up[this.current_floor] == 1) {\n                            console.log(\"到达外面呼叫：\", this.current_floor)\n                            this.removeFromQueue(this.call, this.current_floor)\n                            this.outside_up[this.current_floor] = 0\n                            need_stop = true\n                        }\n                        if (\n                            this.outside_down[this.current_floor] == 1 &&\n                            this.current_floor == this.getMaxInQueue(this.call)\n                        ) {\n                            this.removeFromQueue(this.call, this.current_floor)\n                            outside_down[this.current_floor] = 0\n                            need_stop = true\n                        }\n                    } else {\n                        if (this.outside_down[this.current_floor] == 1) {\n                            this.removeFromQueue(this.call, this.current_floor)\n                            this.outside_down[this.current_floor] = 0\n                            need_stop = true\n                        }\n                        if (\n                            this.outside_up[this.current_floor] == 1 &&\n                            this.current_floor == this.getMinInQueue(this.call)\n                        ) {\n                            this.removeFromQueue(this.call, this.current_floor)\n                            this.outside_up[this.current_floor] = 0\n                            need_stop = true\n                        }\n                    }\n                    if (need_stop) {\n                        console.log(\"stop:\", this.current_floor)\n                        this.ding(this.current_floor)\n                    } else {\n                        this.going_up ? this.moveUp() : this.moveDown()\n                    }\n                } else {\n                    this.going_up ? this.moveUp() : this.moveDown()\n                    this.updateFloorInfo()\n                }\n                this.checkStatus()\n            }\n        },\n        //暂停计时器，熄灭该楼层的灯光\n        ding(floor) {\n            let _this = this\n            let that = this\n            //需要电梯停下，就把timer清空\n            if (this.timer) {\n                clearInterval(this.timer)\n            }\n            this.openDoor()\n            //不会重复执行的延时函数\n            setTimeout(function() {\n                _this.closeDoor()\n                setTimeout(function() {\n                    that.timer = setInterval(that.run, 1000)\n                }, 3000)\n            }, 4000)\n        },\n        //上行函数\n        moveUp() {\n            if (this.current_floor < this.max_floor) {\n                this.current_floor++\n            }\n        },\n        //下行\n        moveDown() {\n            if (this.current_floor > this.min_floor) {\n                this.current_floor--\n            }\n        }\n    },\n    created() {\n        //初始化电梯状态\n        for (var i = 0; i <= this.max_floor; ++i) {\n            this.button_click[i] = false\n            this.outside_up[i] = 0\n            this.outside_down[i] = 0\n            this.inside[i] = 0\n            this.floor_id[i] = i //这个顺序是\n        }\n    },\n    mounted() {\n        //每秒执行一次run函数\n        this.timer = setInterval(this.run, 1000)\n\n        //下面这段代码我也看不太懂，但是实现了定期更新\n        // if (this.timer) {\n        //     clearInterval(this.timer)\n        // } else {\n        //     this.timer = setInterval(() => {\n        //         // 调用相应的接口，渲染数据\n        //         //他意思大概就是隔一段时间你要检测一下当前楼层，外部请求这些\n        //         //这里就是检测用的！\n        //         // console.log(this.call)\n        //         //上行or下行\n        //         if (this.running && this.going_up) {\n        //             this.current_floor++\n        //         } else if (this.running && !this.going_up) {\n        //             this.current_floor--\n        //         }\n        //         this.checkStatus()\n        //     }, 3000)\n        // }\n    },\n    destroyed() {\n        clearInterval(this.timer)\n    }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n\n.box-card {\n    width: 340px;\n    height: 800px;\n    padding:10px\n\n    .floor-num {\n        background-color: #409eff;\n        text-align: center;\n        font-size: 150%\n        color: #ffffff;\n        margin-bottom: 20px;\n\n        .el-icon-caret-top{\n            margin-right:40px\n        }\n\n        .el-icon-caret-bottom{\n            margin-left:40px\n        }\n\n        .disabled{\n            color: #152959\n        }\n\n    }\n\n    .button-group{\n        width: 100%\n        overflow: hidden;\n        height: 0\n        padding-bottom: 200%\n        display: flex;\n        flex-wrap: wrap;\n\n        .button-place{\n            width: 50%\n            display: flex;\n            justify-content: center;\n            margin-bottom: 20px\n\n            .button{\n                width:120px\n            }\n            .button-click{\n                color:#ffffff\n                background: #409eff\n            }\n        }\n\n    }\n\n    .control{\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n\n        .switch{\n            margin-left: 20px;\n        }\n    }\n\n\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/components/inside.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"box\"},[_c('el-card',{staticClass:\"box-card\"},[_c('el-card',{staticClass:\"floor-num\",attrs:{\"shadow\":\"always\"}},[_c('div',[_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.going_up),expression:\"this.going_up\"}],staticClass:\"el-icon-caret-top\"}),_vm._v(\" \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(!this.going_up),expression:\"!this.going_up\"}],staticClass:\"el-icon-caret-top disabled\"}),_vm._v(\"\\n                \"+_vm._s(this.current_floor)+\"\\n                \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(!this.going_up),expression:\"!this.going_up\"}],staticClass:\"el-icon-caret-bottom\"}),_vm._v(\" \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.going_up),expression:\"this.going_up\"}],staticClass:\"el-icon-caret-bottom disabled\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"button-group\"},_vm._l((this.floor_count),function(o){return _c('div',{key:o,staticClass:\"button-place\"},[_c('el-button',{staticClass:\"button\",class:{ 'button-click': _vm.button_click[o] },attrs:{\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":function($event){return _vm.handleInsideButtonClick(o)}}},[_vm._v(\"\\n                    \"+_vm._s(o)+\"\\n                \")])],1)}),0),_vm._v(\" \"),_c('div',{staticClass:\"control\"},[_c('el-switch',{staticClass:\"switch\",staticStyle:{\"display\":\"block\"},attrs:{\"active-color\":\"#13ce66\",\"inactive-color\":\"#ff4949\",\"active-text\":\"开门\",\"inactive-text\":\"关门\"},nativeOn:{\"click\":function($event){return _vm.doorAlert()}},model:{value:(_vm.door),callback:function ($$v) {_vm.door=$$v},expression:\"door\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"warning\",\"icon\":\"el-icon-phone\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.handlePhoneClick()}}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-message-solid\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.handleBellClick()}}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5dc08544\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/components/inside.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5dc08544\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./inside.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./inside.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./inside.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5dc08544\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./inside.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5dc08544\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/components/inside.vue\n// module id = null\n// module chunks = ","<template>\n    <div>\n        <div>\n            <el-tag class=\"number-tag\">{{ this.floor_id }}</el-tag>\n            <el-button-group>\n                <el-button\n                    size=\"small\"\n                    type=\"primary\"\n                    @click=\"handleUpClick()\"\n                    :class=\"{ 'button-click': this.up }\"\n                    ><i class=\"el-icon-top\"></i\n                ></el-button>\n                <el-button\n                    size=\"small\"\n                    type=\"primary\"\n                    @click=\"handleDownClick()\"\n                    ><i class=\"el-icon-bottom\"></i\n                ></el-button>\n            </el-button-group>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"Outside\",\n    props: {\n        floor_id: Number //按钮对应楼层\n    },\n    data() {\n        return {\n            //当前的上下键是否已经按亮\n            up: false,\n            down: false\n        }\n    },\n    methods: {\n        //点击上、下按钮，把该楼层加入距离该楼层最近的电梯的等待队列中\n        handleUpClick() {\n            if (!this.up) {\n                //把当前呼叫楼层传给父组件\n                this.up = true\n                this.$emit(\"childCallFloorUp\", this.floor_id)\n            }\n        },\n        handleDownClick() {\n            if (!this.down) {\n                //把当前呼叫楼层传给父组件\n                this.down = true\n                this.$emit(\"childCallFloorDown\", this.floor_id)\n            }\n        }\n    }\n}\n</script>\n\n<style>\n.number-tag {\n    width: 50px;\n    text-align: center;\n    margin: 20px auto 20px auto;\n}\n\n/* .button-click {\n    background: blue;\n} */\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/components/outside.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('el-tag',{staticClass:\"number-tag\"},[_vm._v(_vm._s(this.floor_id))]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{class:{ 'button-click': this.up },attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleUpClick()}}},[_c('i',{staticClass:\"el-icon-top\"})]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleDownClick()}}},[_c('i',{staticClass:\"el-icon-bottom\"})])],1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-c47c6b88\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/components/outside.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c47c6b88\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./outside.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./outside.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./outside.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c47c6b88\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./outside.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/components/outside.vue\n// module id = null\n// module chunks = ","<template>\n    <div class=\"page\">\n        <div>\n            <inside\n                v-for=\"o in this.ele_count\"\n                :key=\"o\"\n                class=\"card\"\n                :floor_count=\"floor_count\"\n                :ele_id=\"o\"\n                :press_floor=\"press_floor\"\n                :up=\"up\"\n                :down=\"down\"\n                :call_ele_id=\"call_ele_id\"\n                @childStatus=\"getChildStatus\"\n                ref=\"insidechild\"\n            ></inside>\n        </div>\n        <div>\n            <outside\n                class=\"floor\"\n                v-for=\"o in this.floor_count\"\n                :key=\"o\"\n                :floor_id=\"o\"\n                @childCallFloorUp=\"callFloorUp\"\n                @childCallFloorDown=\"callFloorDown\"\n            ></outside>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Inside from \"./components/inside\"\nimport Outside from \"./components/outside\"\nexport default {\n    name: \"Home\",\n    components: {\n        Inside,\n        Outside\n    },\n    data() {\n        return {\n            ele_count: 5, //电梯数量,对应电梯id\n            floor_count: 20, //楼层数量\n            running: [], //电梯运行状态\n            going_up: [], //电梯方向\n            current_floor: [], //每个电梯的当前楼层\n            call: [[]], //每个电梯的等待队列\n            //传给子组件的值\n            //要维护一个变量 保证楼层被按下时候能被监听\n            press_floor: null,\n            call_ele_id: 1, //要放入的ele_id\n            up: false, //⬆上被按下\n            down: false //下被按下\n        }\n    },\n    methods: {\n        // 计算已排序的队列[n]中a和b之间的数目计数\n        // a > b or a < b is ok\n        betweenCount(a, b, id) {\n            if (a > b) {\n                var temp = a\n                a = b\n                b = temp\n            }\n            console.log(this.call[id])\n            var betweenNum = []\n            for (var i in this.call[id]) {\n                if (\n                    this.call[id][i] <= b &&\n                    this.call[id][i] >= a &&\n                    betweenNum.indexOf(this.call[id][i] < 0)\n                ) {\n                    betweenNum.push(this.call[id][i])\n                }\n            }\n            console.log(\"between:\", betweenNum.length)\n            return betweenNum.length\n        }, //找最小最大值\n        getMinInQueue(arr) {\n            // if (length.arr) {\n            return arr[0]\n            // }\n        },\n        getMaxInQueue(arr) {\n            // if (length.arr) {\n            return arr[arr.length - 1]\n            // }\n        },\n        //计算应该放入哪个电梯\n        calculateUpDistance(press_floor) {\n            var maxDistance = 2 * this.floor_count //可能出现的最小距离\n            var distance = 0\n            var elevatorToPush = 1 //放入的电梯序号\n            // 希望在最短时间内达到呼层\n            // 计算到呼层的步数（1s/步）+5s*当中停下的楼层：\n            // if没有运动 else：\n            // if当前层在呼层的下面或当前层\n            //      电梯向上运动\n            //      电梯向下运动\n            // else当前层在呼层的上面\n            //      电梯向上运动\n            //      电梯向下运动\n            for (var i = 0; i < this.ele_count; i++) {\n                if (!this.running[i]) {\n                    distance = Math.abs(press_floor - this.current_floor[i])\n                } else {\n                    var minInQueue = this.getMinInQueue(this.call[i]) //找出呼叫队列中最小的\n                    var maxInQueue = this.getMaxInQueue(this.call[i]) //找出呼叫队列中最大的\n                    if (this.current_floor[i] <= press_floor) {\n                        if (this.going_up[i]) {\n                            console.log(\"电梯向上，按键比当前高\")\n                            distance =\n                                press_floor -\n                                this.current_floor[i] +\n                                5 *\n                                    this.betweenCount(\n                                        press_floor,\n                                        this.current_floor[i],\n                                        i\n                                    )\n                        } else {\n                            console.log(\"电梯向下，按键比当前高\")\n                            distance =\n                                this.current_floor[i] -\n                                minInQueue +\n                                press_floor -\n                                minInQueue +\n                                5 *\n                                    this.betweenCount(\n                                        minInQueue,\n                                        press_floor,\n                                        i\n                                    )\n                        }\n                    } else {\n                        if (this.going_up[i]) {\n                            console.log(\"电梯向上，按键比当前低\")\n                            distance =\n                                maxInQueue -\n                                this.current_floor[i] +\n                                maxInQueue -\n                                minInQueue +\n                                Math.abs(minInQueue - press_floor) +\n                                5 *\n                                    this.betweenCount(\n                                        maxDistance,\n                                        maxInQueue,\n                                        i\n                                    )\n                            console.log(\n                                \"distance:\",\n                                distance,\n                                \"max:\",\n                                maxDistance\n                            )\n                        } else {\n                            console.log(\"电梯向下，按键比当前低\")\n                            distance =\n                                this.current_floor[i] -\n                                minInQueue +\n                                Math.abs(minInQueue - press_floor) +\n                                5 *\n                                    betweenCount(\n                                        this.current_floor[i],\n                                        minInQueue,\n                                        i\n                                    )\n                        }\n                    }\n                    if (distance < maxDistance) {\n                        maxDistance = distance\n                        elevatorToPush = i + 1\n                    }\n                }\n            }\n            console.log(\n                press_floor + \"上楼将要放入第\" + elevatorToPush + \"电梯\"\n            )\n            this.up = true\n            return elevatorToPush //得到按下按键的楼层即将放入哪个电梯\n        },\n        calculateDownDistance(press_floor) {\n            var maxDistance = 2 * this.floor_count //可能出现的最小距离\n            var distance = 0\n            var elevatorToPush = 1 //放入的电梯序号\n            // 希望在最短时间内达到呼层\n            // 计算到呼层的步数（1s/步）+5s*当中停下的楼层：\n            // if没有运动 else：\n            // if当前层在呼层的下面或当前层\n            //      电梯向上运动\n            //      电梯向下运动\n            // else当前层在呼层的上面\n            //      电梯向上运动\n            //      电梯向下运动\n            for (var i = 0; i < this.ele_count; i++) {\n                if (!this.running[i]) {\n                    distance = Math.abs(press_floor - this.current_floor[i])\n                } else {\n                    var minInQueue = this.getMinInQueue(this.call[i]) //找出呼叫队列中最小的\n                    var maxInQueue = this.getMaxInQueue(this.call[i]) //找出呼叫队列中最大的\n                    if (this.current_floor[i] <= press_floor) {\n                        if (this.going_up[i]) {\n                            console.log(\"电梯向上，按键比当前高\")\n                            distance =\n                                maxInQueue -\n                                this.current_floor[i] +\n                                Math.abs(maxInQueue - press_floor) +\n                                5 *\n                                    this.betweenCount(\n                                        this.current_floor[i],\n                                        maxInQueue,\n                                        i\n                                    )\n                        } else {\n                            console.log(\"电梯向下，按键比当前高\")\n                            distance =\n                                this.current_floor[i] -\n                                minInQueue +\n                                maxInQueue -\n                                minInQueue +\n                                Math.abs(maxInQueue - press_floor) +\n                                5 *\n                                    this.betweenCount(\n                                        maxDistance,\n                                        maxInQueue,\n                                        i\n                                    )\n                        }\n                    } else {\n                        if (this.going_up[i]) {\n                            console.log(\"电梯向上，按键比当前低\")\n                            distance =\n                                maxInQueue -\n                                this.current_floor[i] +\n                                maxInQueue -\n                                press_floor +\n                                5 *\n                                    this.betweenCount(\n                                        maxInQueue,\n                                        press_floor,\n                                        i\n                                    )\n                            console.log(\n                                \"distance:\",\n                                distance,\n                                \"max:\",\n                                maxDistance\n                            )\n                        } else {\n                            console.log(\"电梯向下，按键比当前低\")\n                            distance =\n                                this.current_floor[i] -\n                                press_floor +\n                                5 *\n                                    betweenCount(\n                                        press_floor,\n                                        this.current_floor[i],\n                                        i\n                                    )\n                        }\n                    }\n                    if (distance < maxDistance) {\n                        maxDistance = distance\n                        elevatorToPush = i + 1\n                    }\n                }\n            }\n            console.log(\n                press_floor + \"下楼将要放入第\" + elevatorToPush + \"电梯\"\n            )\n            this.down = true\n            return elevatorToPush //得到按下按键的楼层即将放入哪个电梯\n        },\n        //得到当前哪个楼层被外部呼叫,把这个呼叫信号传递给最近的电梯\n        callFloorUp(floor_num) {\n            this.press_floor = floor_num\n            //把当前需要加入的电梯ID、楼层以及上下都传给子组件\n            this.call_ele_id = this.calculateUpDistance(floor_num)\n\n            //把状态传递给响应电梯子组件\n            this.$refs.insidechild[this.call_ele_id - 1].addOutside(\n                this.up,\n                this.down,\n                floor_num\n            )\n            console.log(\n                \"传入第几个电梯：\",\n                this.call_ele_id,\n                \"第几层楼\",\n                this.press_floor\n            )\n\n            for (var i = 0; i < this.ele_count; i++) {\n                console.log(\"call:\", this.call[i])\n            }\n        },\n        callFloorDown(floor_num) {\n            this.press_floor = floor_num\n            this.call_ele_id = this.calculateDownDistance(floor_num)\n            this.$refs.insidechild[this.call_ele_id - 1].addOutside(\n                this.up,\n                this.down,\n                floor_num\n            )\n            //测试log\n            console.log(\n                \"传入第几个电梯：\",\n                this.call_ele_id,\n                \"第几层楼\",\n                this.press_floor\n            )\n            for (var i = 0; i < this.ele_count; i++) {\n                console.log(\"call:\", this.call[i])\n            }\n        },\n        //从inside获取每个电梯的状态\n        getChildStatus(\n            id,\n            child_current,\n            child_running,\n            child_queue,\n            child_up\n        ) {\n            this.current_floor[id - 1] = child_current\n            this.running[id - 1] = child_running\n            this.call[id - 1] = child_queue\n            this.going_up[id - 1] = child_up\n            console.log(\"ele_id:\", id)\n        }\n    },\n    created() {\n        //初始化电梯状态\n        for (var i = 0; i < this.ele_count; ++i) {\n            this.running[i] = false\n            this.current_floor[i] = 1\n        }\n    }\n}\n</script>\n\n<style>\n.card {\n    display: inline-flex;\n    width: 370px;\n    margin: 20px auto 20px auto;\n}\n.floor {\n    display: inline-flex;\n    justify-content: space-around;\n    width: 370px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/Home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page\"},[_c('div',_vm._l((this.ele_count),function(o){return _c('inside',{key:o,ref:\"insidechild\",refInFor:true,staticClass:\"card\",attrs:{\"floor_count\":_vm.floor_count,\"ele_id\":o,\"press_floor\":_vm.press_floor,\"up\":_vm.up,\"down\":_vm.down,\"call_ele_id\":_vm.call_ele_id},on:{\"childStatus\":_vm.getChildStatus}})}),1),_vm._v(\" \"),_c('div',_vm._l((this.floor_count),function(o){return _c('outside',{key:o,staticClass:\"floor\",attrs:{\"floor_id\":o},on:{\"childCallFloorUp\":_vm.callFloorUp,\"childCallFloorDown\":_vm.callFloorDown}})}),1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-677b0443\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/Home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-677b0443\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-677b0443\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Home.vue\n// module id = null\n// module chunks = ","import Vue from \"vue\"\nimport Router from \"vue-router\"\nimport Home from \"@/pages/Home\"\n\nVue.use(Router)\n\nexport default new Router({\n    routes: [\n        {\n            path: \"/\",\n            name: \"Home\",\n            component: Home\n        }\n    ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from \"vue\"\nimport ElementUI from \"element-ui\"\nimport \"element-ui/lib/theme-chalk/index.css\"\nimport App from \"./App\"\nimport router from \"./router\"\n\nVue.use(ElementUI)\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n    el: \"#app\",\n    router,\n    components: { App },\n    template: \"<App/>\"\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}